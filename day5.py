
inp = [3,225,1,225,6,6,1100,1,238,225,104,0,1002,188,27,224,1001,224,-2241,224,4,224,102,8,223,223,1001,224,6,224,1,223,224,223,101,65,153,224,101,-108,224,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1,158,191,224,101,-113,224,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1001,195,14,224,1001,224,-81,224,4,224,1002,223,8,223,101,3,224,224,1,224,223,223,1102,47,76,225,1102,35,69,224,101,-2415,224,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1101,32,38,224,101,-70,224,224,4,224,102,8,223,223,101,3,224,224,1,224,223,223,1102,66,13,225,1102,43,84,225,1101,12,62,225,1102,30,35,225,2,149,101,224,101,-3102,224,224,4,224,102,8,223,223,101,4,224,224,1,223,224,223,1101,76,83,225,1102,51,51,225,1102,67,75,225,102,42,162,224,101,-1470,224,224,4,224,102,8,223,223,101,1,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1108,226,677,224,1002,223,2,223,1005,224,329,101,1,223,223,108,226,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,1107,677,226,224,1002,223,2,223,1006,224,359,101,1,223,223,1008,226,226,224,1002,223,2,223,1005,224,374,101,1,223,223,8,226,677,224,102,2,223,223,1006,224,389,101,1,223,223,7,226,677,224,1002,223,2,223,1005,224,404,1001,223,1,223,7,226,226,224,1002,223,2,223,1005,224,419,101,1,223,223,107,226,677,224,1002,223,2,223,1005,224,434,101,1,223,223,107,226,226,224,1002,223,2,223,1005,224,449,1001,223,1,223,1107,226,677,224,102,2,223,223,1006,224,464,1001,223,1,223,1007,677,226,224,1002,223,2,223,1006,224,479,1001,223,1,223,1107,677,677,224,1002,223,2,223,1005,224,494,101,1,223,223,1108,677,226,224,102,2,223,223,1006,224,509,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,524,1001,223,1,223,1008,677,226,224,102,2,223,223,1005,224,539,1001,223,1,223,1108,226,226,224,102,2,223,223,1005,224,554,101,1,223,223,107,677,677,224,102,2,223,223,1006,224,569,1001,223,1,223,1007,226,226,224,102,2,223,223,1006,224,584,101,1,223,223,8,677,677,224,102,2,223,223,1005,224,599,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,614,101,1,223,223,108,226,677,224,102,2,223,223,1005,224,629,101,1,223,223,8,677,226,224,102,2,223,223,1006,224,644,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,659,1001,223,1,223,1008,677,677,224,1002,223,2,223,1005,224,674,101,1,223,223,4,223,99,226]

def computer(L, i = 0, words = False, noun = 0, verb = 0, I1 = None, I2 = None, O = None):
    """ Op codes:
        1: add [1] and [2], result to [3]
        2: mult [1] and [2], result to [3]
        3: take input, save to [1]
        4: output [1]
        5: if [1] != 0, pointer = [2]
        6: if [1] == 0, pointer = [2]
        7: if [1] < [2], 1 stored at [3], otherwise [0]
        8: if [1] == [2], 1 stored at [3], otherwise [0] 
        99: halt
        Parameters:
        0: use data to/from position x
        1: use x
    """
    op = L[i]%100
    print("O=", O)
    print(op)
    
    def s1(L, i):
        if L[i]//100%10 == 0:
            s1 = L[L[i+1]]
        else:
            s1 = L[i+1]
        print("s1", s1)
        return s1
    
    def s2(L, i):
        if L[i]//1000%10 == 0:
            s2 = L[L[i+2]]
        else:
            s2 = L[i+2]
        return s2
        
    if op == 99:
        return O
    # if L[i]//100%10 == 0:
    #     s1 = L[L[i+1]]
    # else:
    #     s1 = L[i+1]
    # if L[i]//1000%10 == 0:
    #     s2 = L[L[i+2]]
    # else:
    #     s2 = L[i+2]
    if words:
        L[1] = noun
        L[2] = verb
    if op == 1:
        # print(1)
        L[L[i+3]] = s1(L, i) + s2(L, i)
        return computer(L, i+4, O=O)
    elif op == 2:
        # print(2)
        L[L[i+3]] = s1(L, i) * s2(L, i)
        return computer(L, i+4, O=O)
    elif op == 3:
        print("I1", I1, "I2", I2)
        if I1 == None and I2 == None:
            L[L[i+1]] = int(input("Input: "))
        elif I2 == None:
            L[L[i+1]] = I1
            I1 = None
        else:
            L[L[i+1]] = I2
            I2 = None
        return computer(L, i+2, O=O, I1 = I1, I2=I2)
    elif op == 4:
        print(L[i+1])
        print(L)
        z = L[L[i+1]]
        print(z)
        return computer(L, i+2, O=z)
    elif op == 5:
        if s1(L, i) != 0: return computer(L, s2(L, i), O=O)
        else: return computer(L, i+3, O=O)
    elif op == 6:
        if s1(L, i) == 0:return computer(L, s2(L, i), O=O)
        else: return computer(L, i+3, O=O)
    elif op == 7:
        if s1(L, i) < s2(L, i): L[L[i+3]] = 1
        else: L[L[i+3]] = 0
        return computer(L, i+4, O=O)
    elif op == 8:
        if s1(L, i) == s2(L, i): L[L[i+3]] = 1
        else: L[L[i+3]] = 0
        return computer(L, i+4, O=O)
    else:
        return("Error at index " + str(i) + ", which equals " + str(L[i]) + ".")
    
# print(computer(inp))